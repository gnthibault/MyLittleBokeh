# coding=utf-8
import os.path

# Web stuff
import tornado
import tornado.options
from bokeh.server.server import Server

# Local handlers
from handlers.handlers import MainHandler, LoginHandler, bokeh_app, SecondHandler

# Parametrize tornado
tornado.options.define("port",
                       default=8888,
                       help="run on the given port",
                       type=int)


class TornadoApplication(tornado.web.Application):
    def __init__(self):
        handlers = [
            (r"/", MainHandler),
            (r"/main_page", MainHandler),
            (r"/second_page",SecondHandler),
            (r"/login", LoginHandler),
        ]
        settings = dict(
                template_path=os.path.join(os.path.dirname(__file__), "templates"),
                static_path=os.path.join(os.path.dirname(__file__), "static"),
                xsrf_cookies=True,
                # NOTE: some random value as secret (i.e. generated by uuid4())
                cookie_secret="YOUR SECRET HERE",
                login_url="/login", # redirect() will go there
                debug=True,
        )
        super().__init__(handlers, **settings)



if __name__ == '__main__':
    # First instantiate main tornado infrastructure
    http_server = tornado.httpserver.HTTPServer(TornadoApplication())
    http_server.listen(tornado.options.options.port)
    io_loop = tornado.ioloop.IOLoop.current()

    # Now instantiate bokeh app
    bokeh_server = Server({'/bokeh_app': bokeh_app},
                          io_loop=io_loop,
                          allow_websocket_origin=['localhost:8888'])
    # Launch the whole thing
    io_loop.start()
